

1.获取和设置当前目录的完全限定路径。 获取到debug
string str = System.Environment.CurrentDirectory;
Result: C:\xxx\xxx
2.获取启动了应用程序的可执行文件的路径，不包括可执行文件的名称。 获取到debug
string str = System.Windows.Forms.Application.StartupPath;
Result: C:\xxx\xxx
3.获取新的 Process 组件并将其与当前活动的进程关联的主模块的完整路径，包含文件名。获取到 。。debug\aa.exe文件
string str = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName;
Result: C:\xxx\xxx\xxx.exe
4.获取当前 Thread 的当前应用程序域的基目录，它由程序集冲突解决程序用来探测程序集。 到debug
string str = System.AppDomain.CurrentDomain.BaseDirectory;
Result: C:\xxx\xxx\
5.获取应用程序的当前工作目录。 获取到debue目录
string str = System.IO.Directory.GetCurrentDirectory();
Result: C:\xxx\xxx
6.获取和设置包含该应用程序的目录的名称。 到debug
string str = System.AppDomain.CurrentDomain.SetupInformation.ApplicationBase;
Result: C:\xxx\xxx\
7.获取当前进程的完整路径，包含文件名。 到debug\aa.exe
string str = this.GetType().Assembly.Location;
Result: C:\xxx\xxx\xxx.exe
8.获取启动了应用程序的可执行文件的路径，包括可执行文件的名称。
string str = System.Windows.Forms.Application.ExecutablePath;
Result: C:\xxx\xxx\xxx.exe
此外，更多见的通过XML文件配置具体的路径来达到合理的规划配置文件的具体存放位置，如WEB中的配置文件中的路径。

picture.Image = Image.FromFile(Application.StartupPath + @"\图片\树\" + a + ".jpg");
picture1.Image = Image.FromFile(Application.StartupPath + @"\图片\" + a + ".jpg");